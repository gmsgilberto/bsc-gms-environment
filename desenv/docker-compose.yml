version: '3.9'

services:

  postgredb:
    build: 
      context: ./postgredb
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: postgredb
      POSTGRES_USER: USER-DES
      POSTGRES_PASSWORD: PASS@01
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes: 
      - postgredb:/var/lib/postgresql
          
  redis-cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - cache-redis:/data
    networks:
      - app-network

  mongodb:
    image: mongo:7.0.4
    restart: always
    ports:
      - '27017:27017'
    volumes: 
      - mongodatadb:/data/db
      - mongoconfigdb:/data/configdb
    networks:
      - app-network
      
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka-broker:
    image: confluentinc/cp-kafka:7.4.3
    hostname: kafka-broker
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

volumes:
  cache-redis:
    driver: local
  postgredb:
    driver: local
  mongodatadb:
    driver: local
  mongoconfigdb:
    driver: local
    

networks:
  app-network:
    driver: bridge
  